39d546a24022b62b00aedf7b556ac6c9e2306aab
diff --git a/AUTHORS b/AUTHORS
index 3251716f2a..4b5163961d 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -70,6 +70,7 @@ Felix Geisend√∂rfer <haimuiba@gmail.com>
 Filipe David Manana <fdmanana@gmail.com>
 Franziska Hinkelmann <franziska.hinkelmann@gmail.com>
 Geoffrey Garside <ggarside@gmail.com>
+Gus Caplan <me@gus.host>
 Gwang Yoon Hwang <ryumiel@company100.net>
 Henrique Ferreiro <henrique.ferreiro@gmail.com>
 Hirofumi Mako <mkhrfm@gmail.com>
diff --git a/include/v8.h b/include/v8.h
index 6cfc787e8c..29566f4303 100644
--- a/include/v8.h
+++ b/include/v8.h
@@ -2378,6 +2378,11 @@ class V8_EXPORT Value : public Data {
 
   bool IsWebAssemblyCompiledModule() const;
 
+  /**
+   * Returns true if the value is a Module Namespace Object.
+   */
+  bool IsModuleNamespaceObject() const;
+
   V8_WARN_UNUSED_RESULT MaybeLocal<Boolean> ToBoolean(
       Local<Context> context) const;
   V8_WARN_UNUSED_RESULT MaybeLocal<Number> ToNumber(
diff --git a/src/api.cc b/src/api.cc
index 8b177d041d..6dd669ee11 100644
--- a/src/api.cc
+++ b/src/api.cc
@@ -3583,6 +3583,10 @@ bool Value::IsSetIterator() const {
 
 bool Value::IsPromise() const { return Utils::OpenHandle(this)->IsJSPromise(); }
 
+bool Value::IsModuleNamespaceObject() const {
+  return Utils::OpenHandle(this)->IsJSModuleNamespace();
+}
+
 MaybeLocal<String> Value::ToString(Local<Context> context) const {
   auto obj = Utils::OpenHandle(this);
   if (obj->IsString()) return ToApiHandle<String>(obj);
